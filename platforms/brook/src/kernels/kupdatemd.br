
/* -------------------------------------------------------------------------- *
 *                                   OpenMM                                   *
 * -------------------------------------------------------------------------- *
 * This is part of the OpenMM molecular simulation toolkit originating from   *
 * Simbios, the NIH National Center for Physics-Based Simulation of           *
 * Biological Structures at Stanford, funded under the NIH Roadmap for        *
 * Medical Research, grant U54 GM072970. See https://simtk.org.               *
 *                                                                            *
 * Portions copyright (c) 2009 Stanford University and the Authors.           *
 * Authors: Mark Friedrichs, Mike Houston                                     *
 * Contributors:                                                              *
 *                                                                            *
 * This program is free software: you can redistribute it and/or modify       *
 * it under the terms of the GNU Lesser General Public License as published   *
 * by the Free Software Foundation, either version 3 of the License, or       *
 * (at your option) any later version.                                        *
 *                                                                            *
 * This program is distributed in the hope that it will be useful,            *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
 * GNU Lesser General Public License for more details.                        *
 *                                                                            *
 * You should have received a copy of the GNU Lesser General Public License   *
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.      *
 * -------------------------------------------------------------------------- */

kernel void kupdate_md1( 
		float dt,
		float3 posq<>, 
		float3 v<>, 
		float3 f<>,
		float invmass<>,
		out float3 posqp<> ){

   posqp  = v + dt*invmass*f;
	posqp *= dt;
}

kernel void kupdate_md2(
		float dtinv, //1/dt
		float3 posqp<>, //positions after constraints
		float3 posq<>,  //positions before update
		out float3 vnew<>, //Corrected velocities
		out float3 posqnew<> //equal to posqp, avoids an extra call to copy
		){
   vnew        = posqp * dtinv;
   posqnew     = posq  + posqp;
}

kernel void kupdateMdNoShake(
      float dt,
      float3 posq<>,
      float3 v<>, 
      float3 f<>,
      float invmass<>,
      out float3 outv<>,
      out float3 posqp<> ){
   posqp     = posq;
   outv      = v + dt*invmass*f;
   posqp    += dt*outv;
}  
